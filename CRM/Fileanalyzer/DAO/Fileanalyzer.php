<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from com.skvare.fileanalyzer/xml/schema/CRM/Fileanalyzer/Fileanalyzer.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:1dfa45c8df6b24203e8efec658d6d438)
 */
use CRM_Fileanalyzer_ExtensionUtil as E;

/**
 * Database access object for the Fileanalyzer entity.
 */
class CRM_Fileanalyzer_DAO_Fileanalyzer extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_file_analyzer';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = FALSE;

  /**
   * Unique Fileanalyzer ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * Reference to civicrm_file.id if linked
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $file_id;

  /**
   * File name with extension
   *
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $filename;

  /**
   * Full file path on server
   *
   * @var string
   *   (SQL type: varchar(500))
   *   Note that values will be retrieved from the database as a string.
   */
  public $file_path;

  /**
   * Directory type: custom, contribute
   *
   * @var string
   *   (SQL type: varchar(20))
   *   Note that values will be retrieved from the database as a string.
   */
  public $directory_type;

  /**
   * File size in bytes
   *
   * @var string
   *   (SQL type: bigint unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $file_size;

  /**
   * File extension (pdf, jpg, png, etc)
   *
   * @var string|null
   *   (SQL type: varchar(10))
   *   Note that values will be retrieved from the database as a string.
   */
  public $file_extension;

  /**
   * MIME type of the file
   *
   * @var string|null
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $mime_type;

  /**
   * Flag indicating if file is orphaned
   *
   * @var bool|string|null
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_abandoned;

  /**
   * Flag indicating if file is partially orphaned
   *
   * @var bool|string|null
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_table_reference;

  /**
   * Flag indicating if file still exists on filesystem
   *
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_active;

  /**
   * File creation date from filesystem
   *
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $created_date;

  /**
   * File last modification date
   *
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $modified_date;

  /**
   * Last time this file was scanned
   *
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $last_scanned_date;

  /**
   * Status: pending, scanned, deleted, error
   *
   * @var string|null
   *   (SQL type: varchar(20))
   *   Note that values will be retrieved from the database as a string.
   */
  public $scan_status;

  /**
   * Flag indicating if file is belong contact image
   *
   * @var bool|string|null
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_contact_file;

  /**
   * FK to Contact
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $contact_id;

  /**
   * Type: file_record, contact_image, contribution_page, message_template, custom_field
   *
   * @var string|null
   *   (SQL type: varchar(50))
   *   Note that values will be retrieved from the database as a string.
   */
  public $reference_type;

  /**
   * Related entity table name
   *
   * @var string|null
   *   (SQL type: varchar(64))
   *   Note that values will be retrieved from the database as a string.
   */
  public $item_table;

  /**
   * Related entity ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $item_id;

  /**
   * Field name where file is referenced
   *
   * @var string|null
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $field_name;

  /**
   * JSON with additional reference metadata
   *
   * @var string|null
   *   (SQL type: text)
   *   Note that values will be retrieved from the database as a string.
   */
  public $reference_details;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_file_analyzer';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Fileanalyzers') : E::ts('Fileanalyzer');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique Fileanalyzer ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.id',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'file_id' => [
          'name' => 'file_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('File ID'),
          'description' => E::ts('Reference to civicrm_file.id if linked'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.file_id',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'FKClassName' => 'CRM_Core_DAO_File',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("File"),
          ],
          'add' => NULL,
        ],
        'filename' => [
          'name' => 'filename',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Filename'),
          'description' => E::ts('File name with extension'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.filename',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Filename"),
          ],
          'add' => NULL,
        ],
        'file_path' => [
          'name' => 'file_path',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('File Path'),
          'description' => E::ts('Full file path on server'),
          'required' => TRUE,
          'maxlength' => 500,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.file_path',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("File Path"),
          ],
          'add' => NULL,
        ],
        'directory_type' => [
          'name' => 'directory_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Directory Type'),
          'description' => E::ts('Directory type: custom, contribute'),
          'required' => TRUE,
          'maxlength' => 20,
          'size' => CRM_Utils_Type::MEDIUM,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.directory_type',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Directory Type"),
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Fileanalyzer_BAO_FileAnalyzer::getDirectoryTypes',
          ],
          'add' => NULL,
        ],
        'file_size' => [
          'name' => 'file_size',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('File Size'),
          'description' => E::ts('File size in bytes'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.file_size',
          'default' => '0',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
            'label' => E::ts("File Size"),
          ],
          'add' => NULL,
        ],
        'file_extension' => [
          'name' => 'file_extension',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('File Extension'),
          'description' => E::ts('File extension (pdf, jpg, png, etc)'),
          'maxlength' => 10,
          'size' => CRM_Utils_Type::TWELVE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.file_extension',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("File Extension"),
          ],
          'add' => NULL,
        ],
        'mime_type' => [
          'name' => 'mime_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Mime Type'),
          'description' => E::ts('MIME type of the file'),
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.mime_type',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("MIME Type"),
          ],
          'add' => NULL,
        ],
        'is_abandoned' => [
          'name' => 'is_abandoned',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Abandoned'),
          'description' => E::ts('Flag indicating if file is orphaned'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.is_abandoned',
          'default' => '0',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
            'label' => E::ts("Is Abandoned"),
          ],
          'add' => NULL,
        ],
        'is_table_reference' => [
          'name' => 'is_table_reference',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Table Reference'),
          'description' => E::ts('Flag indicating if file is partially orphaned'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.is_table_reference',
          'default' => '0',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
            'label' => E::ts("Is Abandoned With Partial reference"),
          ],
          'add' => NULL,
        ],
        'is_active' => [
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Enabled'),
          'description' => E::ts('Flag indicating if file still exists on filesystem'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.is_active',
          'default' => '1',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
            'label' => E::ts("Is Active"),
          ],
          'add' => NULL,
        ],
        'created_date' => [
          'name' => 'created_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Created Date'),
          'description' => E::ts('File creation date from filesystem'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.created_date',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'label' => E::ts("Created Date"),
          ],
          'add' => NULL,
        ],
        'modified_date' => [
          'name' => 'modified_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Modified Date'),
          'description' => E::ts('File last modification date'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.modified_date',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'label' => E::ts("Modified Date"),
          ],
          'add' => NULL,
        ],
        'last_scanned_date' => [
          'name' => 'last_scanned_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Last Scanned Date'),
          'description' => E::ts('Last time this file was scanned'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.last_scanned_date',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'label' => E::ts("Last Scanned Date"),
          ],
          'add' => NULL,
        ],
        'scan_status' => [
          'name' => 'scan_status',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Scan Status'),
          'description' => E::ts('Status: pending, scanned, deleted, error'),
          'maxlength' => 20,
          'size' => CRM_Utils_Type::MEDIUM,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.scan_status',
          'default' => 'pending',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Scan Status"),
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Fileanalyzer_BAO_FileAnalyzer::getScanStatuses',
          ],
          'add' => NULL,
        ],
        'is_contact_file' => [
          'name' => 'is_contact_file',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Contact File'),
          'description' => E::ts('Flag indicating if file is belong contact image'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.is_contact_file',
          'default' => '0',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
            'label' => E::ts("Is Contact File"),
          ],
          'add' => NULL,
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Contact ID'),
          'description' => E::ts('FK to Contact'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.contact_id',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Contact',
          'add' => NULL,
        ],
        'reference_type' => [
          'name' => 'reference_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Reference Type'),
          'description' => E::ts('Type: file_record, contact_image, contribution_page, message_template, custom_field'),
          'maxlength' => 50,
          'size' => CRM_Utils_Type::BIG,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.reference_type',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Reference Type"),
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Fileanalyzer_BAO_Fileanalyzer::getReferenceTypes',
          ],
          'add' => NULL,
        ],
        'item_table' => [
          'name' => 'item_table',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Item Table'),
          'description' => E::ts('Related entity table name'),
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.item_table',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Entity Table"),
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Fileanalyzer_BAO_Fileanalyzer::tableMapping',
          ],
          'add' => NULL,
        ],
        'item_id' => [
          'name' => 'item_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Item ID'),
          'description' => E::ts('Related entity ID'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.item_id',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
            'label' => E::ts("Entity ID"),
          ],
          'add' => NULL,
        ],
        'field_name' => [
          'name' => 'field_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Field Name'),
          'description' => E::ts('Field name where file is referenced'),
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.field_name',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Field Name"),
          ],
          'add' => NULL,
        ],
        'reference_details' => [
          'name' => 'reference_details',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Reference Details'),
          'description' => E::ts('JSON with additional reference metadata'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer.reference_details',
          'table_name' => 'civicrm_file_analyzer',
          'entity' => 'Fileanalyzer',
          'bao' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'localizable' => 0,
          'html' => [
            'type' => 'TextArea',
            'label' => E::ts("Reference Details"),
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'file_analyzer', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'file_analyzer', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [
      'UK_file_path_directory' => [
        'name' => 'UK_file_path_directory',
        'field' => [
          0 => 'file_path',
          1 => 'directory_type',
        ],
        'localizable' => FALSE,
        'unique' => TRUE,
        'sig' => 'civicrm_file_analyzer::1::file_path::directory_type',
      ],
      'index_directory_type' => [
        'name' => 'index_directory_type',
        'field' => [
          0 => 'directory_type',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_file_analyzer::0::directory_type',
      ],
      'index_is_abandoned' => [
        'name' => 'index_is_abandoned',
        'field' => [
          0 => 'is_abandoned',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_file_analyzer::0::is_abandoned',
      ],
      'index_file_extension' => [
        'name' => 'index_file_extension',
        'field' => [
          0 => 'file_extension',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_file_analyzer::0::file_extension',
      ],
      'index_scan_status' => [
        'name' => 'index_scan_status',
        'field' => [
          0 => 'scan_status',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_file_analyzer::0::scan_status',
      ],
      'index_modified_date' => [
        'name' => 'index_modified_date',
        'field' => [
          0 => 'modified_date',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_file_analyzer::0::modified_date',
      ],
      'index_reference_type' => [
        'name' => 'index_reference_type',
        'field' => [
          0 => 'reference_type',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_file_analyzer::0::reference_type',
      ],
      'index_entity' => [
        'name' => 'index_entity',
        'field' => [
          0 => 'item_table',
          1 => 'item_id',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_file_analyzer::0::item_table::item_id',
      ],
    ];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
