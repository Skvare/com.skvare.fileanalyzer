<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from com.skvare.fileanalyzer/xml/schema/CRM/Fileanalyzer/FileanalyzerReference.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:9790bcea4c51a0cd8a1b25faaab0df57)
 */
use CRM_Fileanalyzer_ExtensionUtil as E;

/**
 * Database access object for the FileanalyzerReference entity.
 */
class CRM_Fileanalyzer_DAO_FileanalyzerReference extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_file_analyzer_reference';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique FileanalyzerReference ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * Reference to civicrm_file_analyzer.id
   *
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $file_analyzer_id;

  /**
   * Type: file_record, contact_image, contribution_page, message_template, custom_field
   *
   * @var string
   *   (SQL type: varchar(50))
   *   Note that values will be retrieved from the database as a string.
   */
  public $reference_type;

  /**
   * Related entity table name
   *
   * @var string|null
   *   (SQL type: varchar(64))
   *   Note that values will be retrieved from the database as a string.
   */
  public $entity_table;

  /**
   * Related entity ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $entity_id;

  /**
   * Field name where file is referenced
   *
   * @var string|null
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $field_name;

  /**
   * JSON with additional reference metadata
   *
   * @var string|null
   *   (SQL type: text)
   *   Note that values will be retrieved from the database as a string.
   */
  public $reference_details;

  /**
   * When this reference was discovered
   *
   * @var string
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $created_date;

  /**
   * Last time reference was verified
   *
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $last_verified_date;

  /**
   * Whether reference is still valid
   *
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_active;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_file_analyzer_reference';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Fileanalyzer References') : E::ts('Fileanalyzer Reference');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique FileanalyzerReference ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer_reference.id',
          'table_name' => 'civicrm_file_analyzer_reference',
          'entity' => 'FileanalyzerReference',
          'bao' => 'CRM_Fileanalyzer_DAO_FileanalyzerReference',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'file_analyzer_id' => [
          'name' => 'file_analyzer_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('File Analyzer ID'),
          'description' => E::ts('Reference to civicrm_file_analyzer.id'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer_reference.file_analyzer_id',
          'table_name' => 'civicrm_file_analyzer_reference',
          'entity' => 'FileanalyzerReference',
          'bao' => 'CRM_Fileanalyzer_DAO_FileanalyzerReference',
          'localizable' => 0,
          'FKClassName' => 'CRM_Fileanalyzer_DAO_Fileanalyzer',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("File Analyzer"),
          ],
          'add' => NULL,
        ],
        'reference_type' => [
          'name' => 'reference_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Reference Type'),
          'description' => E::ts('Type: file_record, contact_image, contribution_page, message_template, custom_field'),
          'required' => TRUE,
          'maxlength' => 50,
          'size' => CRM_Utils_Type::BIG,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer_reference.reference_type',
          'table_name' => 'civicrm_file_analyzer_reference',
          'entity' => 'FileanalyzerReference',
          'bao' => 'CRM_Fileanalyzer_DAO_FileanalyzerReference',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Reference Type"),
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Fileanalyzer_BAO_FileAnalyzerReference::getReferenceTypes',
          ],
          'add' => NULL,
        ],
        'entity_table' => [
          'name' => 'entity_table',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Entity Table'),
          'description' => E::ts('Related entity table name'),
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer_reference.entity_table',
          'table_name' => 'civicrm_file_analyzer_reference',
          'entity' => 'FileanalyzerReference',
          'bao' => 'CRM_Fileanalyzer_DAO_FileanalyzerReference',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Entity Table"),
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Fileanalyzer_BAO_FileanalyzerReference::tableMapping',
          ],
          'add' => NULL,
        ],
        'entity_id' => [
          'name' => 'entity_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Entity ID'),
          'description' => E::ts('Related entity ID'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer_reference.entity_id',
          'table_name' => 'civicrm_file_analyzer_reference',
          'entity' => 'FileanalyzerReference',
          'bao' => 'CRM_Fileanalyzer_DAO_FileanalyzerReference',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
            'label' => E::ts("Entity ID"),
          ],
          'add' => NULL,
        ],
        'field_name' => [
          'name' => 'field_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Field Name'),
          'description' => E::ts('Field name where file is referenced'),
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer_reference.field_name',
          'table_name' => 'civicrm_file_analyzer_reference',
          'entity' => 'FileanalyzerReference',
          'bao' => 'CRM_Fileanalyzer_DAO_FileanalyzerReference',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Field Name"),
          ],
          'add' => NULL,
        ],
        'reference_details' => [
          'name' => 'reference_details',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Reference Details'),
          'description' => E::ts('JSON with additional reference metadata'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer_reference.reference_details',
          'table_name' => 'civicrm_file_analyzer_reference',
          'entity' => 'FileanalyzerReference',
          'bao' => 'CRM_Fileanalyzer_DAO_FileanalyzerReference',
          'localizable' => 0,
          'html' => [
            'type' => 'TextArea',
            'label' => E::ts("Reference Details"),
          ],
          'add' => NULL,
        ],
        'created_date' => [
          'name' => 'created_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Created Date'),
          'description' => E::ts('When this reference was discovered'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer_reference.created_date',
          'table_name' => 'civicrm_file_analyzer_reference',
          'entity' => 'FileanalyzerReference',
          'bao' => 'CRM_Fileanalyzer_DAO_FileanalyzerReference',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'label' => E::ts("Created Date"),
          ],
          'add' => NULL,
        ],
        'last_verified_date' => [
          'name' => 'last_verified_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Last Verified Date'),
          'description' => E::ts('Last time reference was verified'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer_reference.last_verified_date',
          'table_name' => 'civicrm_file_analyzer_reference',
          'entity' => 'FileanalyzerReference',
          'bao' => 'CRM_Fileanalyzer_DAO_FileanalyzerReference',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'label' => E::ts("Last Verified Date"),
          ],
          'add' => NULL,
        ],
        'is_active' => [
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Enabled'),
          'description' => E::ts('Whether reference is still valid'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_file_analyzer_reference.is_active',
          'default' => '1',
          'table_name' => 'civicrm_file_analyzer_reference',
          'entity' => 'FileanalyzerReference',
          'bao' => 'CRM_Fileanalyzer_DAO_FileanalyzerReference',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
            'label' => E::ts("Is Active"),
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'file_analyzer_reference', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'file_analyzer_reference', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [
      'index_reference_type' => [
        'name' => 'index_reference_type',
        'field' => [
          0 => 'reference_type',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_file_analyzer_reference::0::reference_type',
      ],
      'index_entity' => [
        'name' => 'index_entity',
        'field' => [
          0 => 'entity_table',
          1 => 'entity_id',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_file_analyzer_reference::0::entity_table::entity_id',
      ],
    ];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
